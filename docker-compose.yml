version: '3.9'

services:
  mysql-source:
    image: mysql:8.0
    restart: always
    container_name: mysql_source
    environment:
      MYSQL_ROOT_PASSWORD: ${SOURCE_DB_ROOT_PASS}
      MYSQL_DATABASE: ${SOURCE_DB}
      MYSQL_USER: ${SOURCE_DB_USER}
      MYSQL_PASSWORD: ${SOURCE_DB_PASS}
#    ports:
#      - "3307:3306"
    volumes:
      - ./init/source_init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  mysql-target:
    image: mysql:8.0
    restart: always
    container_name: mysql_target
    environment:
      MYSQL_ROOT_PASSWORD: ${TARGET_DB_ROOT_PASS}
      MYSQL_DATABASE: ${TARGET_DB}
      MYSQL_USER: ${TARGET_DB_USER}
      MYSQL_PASSWORD: ${TARGET_DB_PASS}
#    ports:
#      - "3308:3306"
    volumes:
      - ./init/target_init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  python-sync:
    build: ./app
    container_name: python_sync
    environment:
      SOURCE_DB_ROOT_PASS: ${SOURCE_DB_ROOT_PASS}
      SOURCE_DB: ${SOURCE_DB}
      SOURCE_DB_USER: ${SOURCE_DB_USER}
      SOURCE_DB_PASS: ${SOURCE_DB_PASS}
      SOURCE_DB_HOST: ${SOURCE_DB_HOST}
      TARGET_DB_ROOT_PASS: ${TARGET_DB_ROOT_PASS}
      TARGET_DB: ${TARGET_DB}
      TARGET_DB_USER: ${TARGET_DB_USER}
      TARGET_DB_PASS: ${TARGET_DB_PASS}
      TARGET_DB_HOST: ${TARGET_DB_HOST}
    depends_on:
      mysql-source:
        condition: service_healthy
      mysql-target:
        condition: service_healthy

  adminer:
    image: adminer:4.8.1
    restart: always
    ports:
      - "8080:8080"
